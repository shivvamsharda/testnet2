import { Context as Context$1, useClient as useClient$1, LivepeerConfig as LivepeerConfig$1 } from '@livepeer/core-react/context';
import 'react';
import { T as ThemeContext } from './useTheme-6833860c.esm.js';
import { jsx } from 'react/jsx-runtime';

var ThemeProvider = function ThemeProvider(_ref) {
  var theme = _ref.theme,
    children = _ref.children;
  return /*#__PURE__*/jsx(ThemeContext.Provider, {
    value: theme !== null && theme !== void 0 ? theme : null,
    children: children
  });
};

var Context = Context$1;
var useClient = useClient$1;

// Extends the core livepeer config to provide theming

function LivepeerConfig(_ref) {
  var children = _ref.children,
    client = _ref.client,
    theme = _ref.theme,
    dehydratedState = _ref.dehydratedState;
  return /*#__PURE__*/jsx(LivepeerConfig$1, {
    client: client,
    dehydratedState: dehydratedState,
    children: /*#__PURE__*/jsx(ThemeProvider, {
      theme: theme,
      children: children
    })
  });
}

export { Context as C, LivepeerConfig as L, ThemeProvider as T, useClient as u };
