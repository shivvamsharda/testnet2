import { ClipLength, MediaControllerState } from '@livepeer/core';
import * as React from 'react';
type ClipButtonStateSlice = Pick<MediaControllerState, 'live' | 'requestClip' | 'playbackId' | 'clipStatus'>;
export type ClipButtonProps = {
    /**
     * The callback to trigger any logic on click/press.
     */
    onPress?: () => void;
    /**
     * The icon to be used for the button.
     * @type React.ReactElement
     */
    defaultIcon?: React.ReactElement;
    /**
     * The size of the icon.
     */
    size?: number | string;
    /**
     * The length of the clip to be made, from the latest viewer's live point.
     * @type ClipLength
     */
    length: ClipLength;
};
type ClipButtonCoreProps = ClipButtonStateSlice & ClipButtonProps;
export declare const useClipButton: (props: ClipButtonCoreProps) => {
    title: string;
    isShown: boolean | "" | null;
    status: "error" | "loading" | "idle" | "success";
    buttonProps: {
        /**
         * The size of the icon.
         */
        size?: string | number | undefined;
        onPress: () => Promise<void>;
        children: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    };
};
export {};
