import { MediaControllerState } from '@livepeer/core';
import * as React from 'react';
type ProgressStateSlice = Pick<MediaControllerState, 'duration' | 'progress' | 'requestSeek' | 'buffered' | 'live'>;
export type ProgressProps = {
    /**
     * The icon to be used for the progress thumb.
     * @type React.ReactElement
     */
    thumbIcon?: React.ReactElement;
    /**
     * The color of the range background.
     * @type string
     */
    rangeBackgroundColor?: string;
    /**
     * The callback when the user seeks with the progress component.
     */
    onSeek?: (progress: number) => void;
};
type ProgressCoreProps = ProgressStateSlice & ProgressProps;
export declare const useProgress: (props: ProgressCoreProps) => {
    isVisible: boolean;
    title: string;
    progressProps: {
        /**
         * The icon to be used for the progress thumb.
         * @type React.ReactElement
         */
        thumbIcon?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
        /**
         * The color of the range background.
         * @type string
         */
        rangeBackgroundColor?: string | undefined;
        /**
         * The callback when the user seeks with the progress component.
         */
        onSeek?: ((progress: number) => void) | undefined;
        onChange: (value: number) => Promise<void>;
        value: number;
        secondaryValue: number;
        leftCss: {
            backgroundColor: string;
        };
        middleCss: {
            backgroundColor: string;
        };
        rightCss: {
            backgroundColor: string;
        };
        thumbCss: {
            backgroundColor: string;
        };
    };
};
export {};
