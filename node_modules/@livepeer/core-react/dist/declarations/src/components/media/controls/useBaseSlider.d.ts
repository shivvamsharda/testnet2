import * as React from 'react';
export type TrackCSS = {
    backgroundColor: string;
};
export type ThumbCSS = {
    backgroundColor: string;
};
export type BaseSliderProps = {
    /**
     * The name of the slider (volume, time range, etc)
     * @type string
     */
    ariaName: string;
    /**
     * The icon or element to be used for the slider thumb.
     * @type React.ReactElement
     */
    thumbIcon?: React.ReactElement;
    /**
     * The color of the range background.
     * @type string
     */
    rangeBackgroundColor?: string;
    /**
     * The slider value from 0 to 1.
     */
    value: number;
    /**
     * The secondary slider value from 0 to 1.
     */
    secondaryValue?: number;
    /**
     * The callback when the user interacts with the slider. Returns a number from 0 to 1.
     */
    onChange: (value: number) => void;
    /**
     * The callback when the user is done interacting with the slider.
     */
    onDone?: () => void;
    /**
     * CSS applied to the left slider range.
     */
    leftCss: TrackCSS;
    /**
     * CSS applied to the middle slider range.
     */
    middleCss: TrackCSS;
    /**
     * CSS applied to the right slider range.
     */
    rightCss: TrackCSS;
    /**
     * CSS applied to the thumb.
     */
    thumbCss: ThumbCSS;
};
type BaseSliderCoreProps = {
    defaultThumbIcon: React.ReactElement;
    sliderWidth: number;
    isActive?: boolean;
} & BaseSliderProps;
export declare const useBaseSlider: (props: BaseSliderCoreProps) => {
    readonly title: `${number}% ${string}`;
    readonly value: number;
    readonly active: boolean;
    readonly handle: React.ReactNode;
    readonly sliderProps: {
        readonly onUpdate: (locationX: number, isComplete?: boolean) => Promise<void>;
    };
    readonly sliderLeftTrackProps: {
        readonly shown: boolean;
        readonly rounded: "full" | "left";
        readonly css: {
            readonly flex: number;
            readonly backgroundColor: string;
        };
    };
    readonly sliderMiddleTrackProps: {
        readonly shown: boolean;
        readonly rounded: "full" | "none" | "left" | "right";
        readonly css: {
            readonly flex: number;
            readonly backgroundColor: string;
        };
    };
    readonly sliderRightTrackProps: {
        readonly shown: boolean;
        readonly rounded: "full" | "right";
        readonly css: {
            readonly flex: number;
            readonly backgroundColor: string;
        };
    };
};
export {};
