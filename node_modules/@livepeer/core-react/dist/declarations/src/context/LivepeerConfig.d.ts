import { LivepeerProvider } from '@livepeer/core/types';
import { QueryClient } from '@tanstack/react-query';
import * as React from 'react';
import { Client, ReactClient } from '../client';
export declare const Context: React.Context<Client<LivepeerProvider> | undefined>;
export declare const QueryClientContext: React.Context<QueryClient | undefined>;
export type LivepeerConfigProps<TLivepeerProvider extends LivepeerProvider = LivepeerProvider> = {
    /** React-decorated Client instance */
    client: ReactClient<TLivepeerProvider>;
    /**
     * Dehydrated state passed from a server after SSR.
     *
     * @see {@link https://tanstack.com/query/v4/docs/guides/ssr}
     */
    dehydratedState?: string;
};
export declare function LivepeerConfig<TLivepeerProvider extends LivepeerProvider>({ children, client, dehydratedState, }: React.PropsWithChildren<LivepeerConfigProps<TLivepeerProvider>>): import("react/jsx-runtime").JSX.Element;
export declare function useClient<TLivepeerProvider extends LivepeerProvider>(): Client<TLivepeerProvider>;
